"""Initial migration

Revision ID: 1fd2ae68a08e
Revises: 
Create Date: 2024-09-25 00:05:22.163806

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1fd2ae68a08e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None



def upgrade() -> None:
    op.execute(sa.schema.CreateSchema("shopee"))
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'labels',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('mms_img_id', sa.String(), nullable=True),
        sa.Column('label_position', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id', name=op.f('labels_pkey')),
        schema='shopee'
    )
    op.create_table(
        'promotion_groups',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('group', sa.Integer(), nullable=True),
        sa.Column('text', sa.String(), nullable=True),
        sa.Column('browsing_icon', sa.String(), nullable=True),
        sa.Column('mms_img_id', sa.String(), nullable=True),
        sa.Column('discount_type', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id', name=op.f('promotion_groups_pkey')),
        schema='shopee'
    )
    op.create_table(
        'restaurants',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('total_order', sa.Integer(), nullable=True),
        sa.Column('city_id', sa.Integer(), nullable=True),
        sa.Column('restaurant_id', sa.Integer(), nullable=True),
        sa.Column('district_id', sa.Integer(), nullable=True),
        sa.Column('logo_mms_img_id', sa.String(), nullable=True),
        sa.Column('brand_id', sa.Integer(), nullable=True),
        sa.Column('is_open', sa.Boolean(), nullable=True),
        sa.Column('contract_type', sa.Integer(), nullable=True),
        sa.Column('location_url', sa.String(), nullable=True),
        sa.Column('has_contract', sa.Boolean(), nullable=True),
        sa.Column('is_quality_merchant', sa.Boolean(), nullable=True),
        sa.Column('merchant_time', sa.Integer(), nullable=True),
        sa.Column('service_type', sa.Integer(), nullable=True),
        sa.Column('is_foody_delivery', sa.Boolean(), nullable=True),
        sa.Column('limit_distance', sa.Integer(), nullable=True),
        sa.Column('image_name', sa.String(), nullable=True),
        sa.Column('restaurant_status', sa.Integer(), nullable=True),
        sa.Column('address', sa.String(), nullable=True),
        sa.Column('name', sa.String(), nullable=True),
        sa.Column('foody_service_id', sa.Integer(), nullable=True),
        sa.Column('url', sa.String(), nullable=True),
        sa.Column('display_order', sa.Integer(), nullable=True),
        sa.Column('delivery_id', sa.Integer(), nullable=True),
        sa.Column('restaurant_url', sa.String(), nullable=True),
        sa.Column('is_pickup', sa.Boolean(), nullable=True),
        sa.Column('banner_mms_img_id', sa.String(), nullable=True),
        sa.Column('url_rewrite_name', sa.String(), nullable=True),
        sa.Column('latitude', sa.Float(), nullable=True),
        sa.Column('longitude', sa.Float(), nullable=True),
        sa.Column('is_verified', sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint('id', name=op.f('restaurants_pkey')),
        schema='shopee'
    )
    op.create_table(
        'shipping_methods',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('method_id', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id', name=op.f('shipping_methods_pkey')),
        schema='shopee'
    )
    op.create_table(
        'brands',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('brand_id', sa.Integer(), nullable=True),
        sa.Column('name', sa.String(), nullable=True),
        sa.Column('restaurant_count', sa.Integer(), nullable=True),
        sa.Column('url_rewrite_name', sa.String(), nullable=True),
        sa.Column('restaurant_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['restaurant_id'], ['shopee.restaurants.id'], name=op.f('brands_restaurant_id_fkey')),
        sa.PrimaryKeyConstraint('id', name=op.f('brands_pkey')),
        schema='shopee'
    )
    op.create_table(
        'label_photos',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('width', sa.Integer(), nullable=True),
        sa.Column('value', sa.String(), nullable=True),
        sa.Column('height', sa.Integer(), nullable=True),
        sa.Column('label_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['label_id'], ['shopee.labels.id'], name=op.f('label_photos_label_id_fkey')),
        sa.PrimaryKeyConstraint('id', name=op.f('label_photos_pkey')),
        schema='shopee'
    )
    op.create_table(
        'operating_statuses',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('status', sa.Integer(), nullable=True),
        sa.Column('color', sa.String(), nullable=True),
        sa.Column('close_time', sa.String(), nullable=True),
        sa.Column('open_time', sa.String(), nullable=True),
        sa.Column('resource_name', sa.String(), nullable=True),
        sa.Column('restaurant_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['restaurant_id'], ['shopee.restaurants.id'], name=op.f('operating_statuses_restaurant_id_fkey')),
        sa.PrimaryKeyConstraint('id', name=op.f('operating_statuses_pkey')),
        schema='shopee'
    )
    op.create_table(
        'photos',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('width', sa.Integer(), nullable=True),
        sa.Column('value', sa.String(), nullable=True),
        sa.Column('height', sa.Integer(), nullable=True),
        sa.Column('restaurant_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['restaurant_id'], ['shopee.restaurants.id'], name=op.f('photos_restaurant_id_fkey')),
        sa.PrimaryKeyConstraint('id', name=op.f('photos_pkey')),
        schema='shopee'
    )
    op.create_table(
        'ratings',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('total_review', sa.Integer(), nullable=True),
        sa.Column('avg', sa.Float(), nullable=True),
        sa.Column('display_total_review', sa.String(), nullable=True),
        sa.Column('app_link', sa.String(), nullable=True),
        sa.Column('restaurant_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['restaurant_id'], ['shopee.restaurants.id'], name=op.f('ratings_restaurant_id_fkey')),
        sa.PrimaryKeyConstraint('id', name=op.f('ratings_pkey')),
        schema='shopee'
    )
    op.create_table(
        'restaurant_promotion_association',
        sa.Column('restaurant_id', sa.Integer(), nullable=True),
        sa.Column('promotion_group_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['promotion_group_id'], ['shopee.promotion_groups.id'], name=op.f('restaurant_promotion_association_promotion_group_id_fkey')),
        sa.ForeignKeyConstraint(['restaurant_id'], ['shopee.restaurants.id'], name=op.f('restaurant_promotion_association_restaurant_id_fkey')),
        schema='shopee'
    )
    op.create_table(
        'restaurant_shipping_association',
        sa.Column('restaurant_id', sa.Integer(), nullable=True),
        sa.Column('shipping_method_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['restaurant_id'], ['shopee.restaurants.id'], name=op.f('restaurant_shipping_association_restaurant_id_fkey')),
        sa.ForeignKeyConstraint(['shipping_method_id'], ['shopee.shipping_methods.id'], name=op.f('restaurant_shipping_association_shipping_method_id_fkey')),
        schema='shopee'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('restaurant_shipping_association', schema='shopee')
    op.drop_table('restaurant_promotion_association', schema='shopee')
    op.drop_table('ratings', schema='shopee')
    op.drop_table('photos', schema='shopee')
    op.drop_table('operating_statuses', schema='shopee')
    op.drop_table('label_photos', schema='shopee')
    op.drop_table('brands', schema='shopee')
    op.drop_table('shipping_methods', schema='shopee')
    op.drop_table('restaurants', schema='shopee')
    op.drop_table('promotion_groups', schema='shopee')
    op.drop_table('labels', schema='shopee')
    op.execute(sa.schema.DropSchema("shopee"))
    # ### end Alembic commands ###
